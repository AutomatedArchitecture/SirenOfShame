<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACu
        DAAAAk1TRnQBSQFMAgEBAwEAAWABAAFgAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDBIAYP8MAAGgAYABcAFgAUgBMAFgAUgBMAFgAUgBMAFgAUgBMAFgAUgBMAFg
        AUgBMAFgAUgBMAFgAUgBMAFgAUgBMAFgAUgBMDMADP8B2QHjAdwBfwGlAYgBQAFyAUwBKQFYATMBJwFT
        ATEBOQFnAUQBdwGaAYEB1wHgAdkY/wHvAfAB9AG+AcIB1gF6AYIBrQE6AUMBgQE0ATwBdgFxAXQBmAG3
        AbgBxwLuAfAM/wYAAaABgAFwAWABSAEwAaABgAFwA/8BsAGgAZABsAGgAZABsAGgAZABsAGgAZABsAGg
        AZABsAGgAZABsAGgAZABsAGgAZABYAFIATAzAAn/AaQBwgGrAUEBewFNATIBgAFFASsBhwFFASQBjQFC
        AR4BiQE9ARsBewE2AR0BaQEyAS8BXAE4AZcBsgGfEv8B0wHXAeYBXQFvAbIBFwE2AaYBCgEyAbUBAgEw
        AcIBAgEwAcIBBQEqAaoBCAEfAYQBRQFLAX0CzAHUCf8BoAGAAXABYAFIATABoAGAAXAD/wGgAYABcAf/
        AfgB/wTwAegB4AHwAeAB0AHgAtAB4AHIAcABsAGgAZABYAFIATAzAAb/AaoByAGvAUwBkgFaAUYBoAFd
        AT8BogFaATYBnAFSAS0BlwFLASUBkgFEAR8BjgE+ARkBigE6ARgBfgE2AScBaAE5AZcBsgGfDP8B1AHZ
        AegBOAFUAbIBDwE5Ab0BAAEzAdEBAAEzAc4BAAEzAc4BAAEyAcsBAAEyAcsBAAEyAcsBAwEmAaEBGAEi
        AWoCzAHUBv8BoAGAAXAD/wGgAYABcAP/AaABgAFwBv8B0AHwAeABEAFoAVAE8ALgAfAB2AHQAeAB0AHA
        AbABoAGQAWABSAEwMwAD/wHfAekB4AFVAZYBXgFbAa4BbgFWAbEBbQFMAasBZAFCAaQBXAE5AZ4BVQEw
        AZkBTQEoAZQBRwEhAY8BQQEaAYsBPAEZAX8BNgEwAWABOgHXAeAB2Qb/AfAB8QH1AWUBegHEARMBPgHI
        AQABNwHgAQABNwHgAQABNwHgAQABNQHcAQABNQHWAQABMwHOAQABMgHLAQABMgHLAQMBJgGhAUUBSwF9
        Au4B8AP/AaABgAFwA/8BoAGAAXAD/wGgAYABcAb/ASABmAFwASABmAFwASABmAFwASABmAFwAcAByAHA
        AeAB2AHQAbABoAGQAWABSAEwMwAD/wGaAcQBoQFfAaoBbAFtAb8BgQFjAbkBeAFaAbMBcAP/AUYBpgFg
        ATwBoAFXATMBmwFQASsBlgFIASMBkQFDARwBjAE9AR8BbgE1AXgBnQGCBv8BxAHLAeMBJgFMAcUBAAE6
        Ae4BAAE8AfQB/AH+AvwB/gH8AUcBcgHzATsBZwHsAfwB/gL8Af4B/AEAATIBywEAATIBywEIAR8BhAG3
        AbgBxwP/AaABgAFwA/8BoAGAAXAD/wGgAYgBcAb/AeAC8AEgAZgBcAH/AfgB8AHAAeAB0AEgAZgBcAHw
        AdgB0AGwAaABkAFgAUgBMDMAA/8BbAGvAXQBeQHDAYcBeQHHAYsBcAHBAYMJ/wFJAakBYgE/AaIBWgE2
        AZwBUgEtAZgBSwElAZIBRAEhAYEBPAE+AW8BSQb/AYsBnAHTARgBSAHgAQUBQwH/AQwBSAH/AXYBmAH+
        AfwB/gL8Af4C/AH+AvwB/gH8AV8BggHrAQABNAHTAQABMgHLAQUBKgGqAXEBdAGYA/8BoAGAAXAD/wGg
        AYgBcAP/AaABiAGAEP8B+AHwASABmAFwAfAC4AGwAaABkAFgAUgBMDMAA/8BWQGnAWIBmQHcAaUBjQHV
        AZ0G/wFIAZ4BVAb/AUwBqwFkAUMBpQFdATkBngFVATABmQFNASgBjwFFAS4BYAE4Bv8BWQFzAcgBSgFz
        AfkBSwF4Af8BLwFjAf8BKAFdAf8BsgHGAf0B/AH+AvwB/gH8AZ0BtgH9AQABOgHuAQABNgHdAQABMwHO
        AQIBMAHCATQBPAF2A/8BoAGIAXAD/wGgAYgBgAP/AbABkAGABv8BIAGYAXAH/wH4Af8E8AHoAeABsAGg
        AZABYAFIATAzAAP/AV0BrgFmAacB5wGyAaEB4wGtAUgBngFUAUgBngFUAXYBxQGIAUgBngFUBv8BTwGt
        AWcBRgGmAWABPAGgAVgBMwGXAU8BMwFnATwG/wFaAXUBywFTAXsB+QFXAYAB/wFRAXsB/wFBAXAB/wGx
        AcUB/QH8Af4C/AH+AfwBpQG7Af0BAAE9AfoBAAE5AecBAAE1AdYBAgEwAcIBOgFDAYED/wGgAYgBgAP/
        AbABkAGAA/8BsAGQAYAG/wEgAZgBcAGwAdgBwAP/ARABeAFQAdAC4APwAbABoAGQAWABSAEwMwAD/wF2
        Ab4BfQGaAd0BpQGwAe4BvAGiAeMBsAGSAdcBoAGCAc0BkgF5AccBiwFIAZ4BVAb/AVMBrgFqAUgBqAFi
        AT0BlgFUAUsBggFVBv8BjQGfAdkBUgF3AewBZwGNAf8BbwGSAf8BlQGvAf4B/AH+AvwB/gL8Af4C/AH+
        AfwBcQGUAf4BAAE6Ae4BAAE1AdwBCwEyAbYBegGCAa0D/wGwAZABgAP/AbABkAGAA/8BsAGYAYAG/wHQ
        AegB4AEgAZgBcAEgAZgBcAEgAZgBcAEQAXgBUAHQAbgCsAGgAZABYAFIATAzAAP/AacB1AGrAYEBzQGL
        AbcB9AHDAbAB7gG8AaQB5QGwAZQB2QGiAYUBzgGUAXwByQGNAUgBngFUBv8BVgGxAW0BRAGRAVUBiQGx
        AZAG/wHGAc4B5wFHAWsB3AF3AZgB/wGGAaMB/wH8Af4C/AH+AfwBgwGhAf4BegGbAf4B/AH+AvwB/gH8
        AQABPAH0AQABNwHgARgBNwGnAb4BwgHWA/8BsAGQAYAD/wGwAZgBgAP/AbABmAGAD/8BIAGYAXAB0AHY
        AdABoAGQAYABYAFQAUABYAFIATAzAAP/AeMB7QHkAXIBwgF5AaAB4gGsAbcB9AHDAbEB7wG9AaUB5QGy
        AZYB2gGjAYcB0AGWAX8BygGPAUgBngFUAUgBngFUAV4BsQFxAVABkAFaAdwB5gHeBv8B8AHyAfYBdAGM
        AdkBWgF9Ae0BhwGkAf8BlwGwAf8BfQGdAf8BWAGBAf8BQQFwAf8BKAFdAf8BDwFJAf8BAAE8AfQBEgE8
        AccBXQFvAbIB7wHwAfQD/wGwAZgBgAP/AbABmAGAA/8BsAGgAZAS/wHQAbgBsAHQAcgBwAFgAUgBMAHj
        AdEByDMABv8BvAHeAcABfQHKAYQBoQHjAa0BtwH0AcMBsQHvAb0BpgHmAbMBmAHcAaUBiQHRAZkBggHN
        AZIBcgG/AYIBXwGlAWsBrQHMAbIM/wHXAdwB7QFZAXcB2AFcAX8B7AF8AZwB/wGHAaQB/wF7AZsB/wFj
        AYkB/wEsAWAB/wEMAUgB/wEXAUQB1QE7AVYBswHTAdcB5gb/AbABmAGAA/8BsAGgAZAD/wHAAaABkBL/
        AcABqAGgAWABSAEwAeMB0QHINgAJ/wG8Ad4BwAF0AcQBegGCAc8BjAGaAd8BpQGpAekBtQGgAeIBrAGH
        Ac4BkgFwAboBewFjAaoBawGyAdEBtxL/AdcB3AHtAXUBjQHZAU8BcQHeAVEBdwHsAVcBfwH6AVIBegH4
        AS8BXAHmASwBUgHMAWYBewHFAdQB2QHoCf8BsAGgAZAD/wHAAaABkAP/AcABoAGQAdABwAGwAdABwAGw
        AdABwAGwAdABuAGwAdABuAGgAcABsAGgAcABoAGQAeMB0QHIOQAM/wHjAe4B5AGoAdYBrAF5AcUBgAFj
        AbgBagFhAbUBaAF2AbwBfQGjAc8BqAHhAesB4xj/AfAB8gH2AcYBzgHnAY0BnwHZAVoBdQHLAVkBcwHI
        AYsBnAHTAcQBywHjAfAB8QH1DP8BwAGgAZAD/wHAAaABkAHgAcgBsAHgAcgBwAHgAdABwAHgAdABwAHg
        AdABwAHgAdABwAHQAbgBsAHjAdEByD8AYP8BsAGYAZAB0AHAAbAB0AHAAbAB0AHAAbAB0AHAAbAB0AHA
        AbAB0AG4AbABwAGwAaAB4wHRAchFAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/
        BQAB8AEBBgABwAEBBwABAQcAAQEHAAEBBwABAQcAAQEHAAEBBwABAQcAAQEHAAEBBwABAQcAAQMHAAEH
        BwABHwcAAX8CAAs=
</value>
  </data>
</root>