<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAAAGABoAwAANgAAABAQAAAAAAgAaAUAAJ4DAAAgIAAAAAAYAKgMAAAGCQAAKAAAABAA
        AAAgAAAAAQAYAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/48P/48P/48P/48P/48P/48P/4
        8P/48P/48P/48PDw/QAAAAAAAAAAAAAAAP/48I+P72ls3kVI2DIy00tL1nBw3Xh44EZG1kVI2Gls3ltb
        2//48AAAAAAAAP/48I+P7zM4yS4x0Dk607+/8P////f3/ezs+v///8TE8jM4yR4ix4+P7//48AAAAP/4
        8B0dzTQ8xzE00b2+8Orq+mlp3Dg40DY2zk5O1NTU9bS26iYvwx0dzf/48AAAAP/48CQpyTlAy0FD1ff3
        /Xp64TU10DY2zzY2zjU1zn5+3/Dw+yUtwyQpyf/48AAAAP/48CkzxhMUyy8xzmNk3Dk50zU10DY1yzU0
        yDo6zrq67tbW9iEnxSkzxv/48AAAAP/48CkzxhMTzSsu2i8vyTEuwjg0w3Bs0Kqo4+Xl9/n5/mxs3RMT
        zSkzxv/48AAAAP/48EVI2A8P1Bog4S4r3piU5fLx+v///+rp97q452dm1SsrzhISzUVI2P/48AAAAP/4
        8EVI2AYG4R0p4Y+S8vv7/q6r6WRe0jg0yDc10TU13zAw4AgI2kVI2P/48AAAAP/48EVI2AkJ4R8o5crN
        98HC9jAx5TQ03zU14TY245ub8X197QcH4UVI2P/48AAAAP/48IuO5SkzxgwN7Z6j8Orq/FNW5jMz5TMz
        5Ftb6P7+/3Z27Q4O4YuO5e/v+gAAAP/48IuO5Wls3gAA7iYq6Nja+fv7/tPT+dra+v///7299hYW4hUV
        4YuO5f/48AAAAP/48Li774uO5R0d8AAA6xIW5m5w7aqq85CQ8WVl6xIS4gwM4Rwc4bi77//48AAAAP/4
        8O/v+ri775qa76Wl97+/+NjY+svL9svL9svL9rGx8Zqa74SE7+/v+v/48AAAAAAAAP/48Li7709P2D9A
        uh4eyR4eyQ8QvBoatj9Auj9AumdnwYeH6P/48AAAAAAAAAAAAAAAAP/48P/48P/48P/48P/48P/48P/4
        8P/48P/48P/48P/48AAAAAAAAAAAAMAHAACAAwAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAB
        AAAAAQAAAAEAAAABAAAAAQAAgAMAAMAHAAAoAAAAEAAAACAAAAABAAgAAAAAAAABAAAAAAAAAAAAAAAB
        AAAAAQAAAAD/AAD/AAD/AAAAAP//AP//AAD/AP8AwMDAAP/48ADX6/oA1P9/AP8AAADiK4oAKiqlAAAA
        AAAEBAQACAgIAAwMDAAREREAFhYWABwcHAAiIiIAKSkpADMzMwA5OTkAQkJCAE1NTQBVVVUAYGBgAGZm
        ZgBwcHAAgICAAIyMjACUlJQAmZmZAKSkpACsrKwAtra2AMDAwADMzMwA1NTUANra2gDg4OAA7OzsAPj4
        +AD7+/sA////ADMAAABmAAAAmQAAAMwAAAD/AAAAADMAADMzAABmMwAAmTMAAMwzAAD/MwAAAGYAADNm
        AABmZgAAmWYAAMxmAAD/ZgAAAJkAADOZAABmmQAAmZkAAMyZAAD/mQAAAMwAADPMAABmzAAAmcwAAMzM
        AAD/zAAAAP8AADP/AABm/wAAmf8AAMz/AAD//wAAAAAzADMAMwBmADMAmQAzAMwAMwD/ADMAADMzAGYz
        MwCZMzMAzDMzAP8zMwAAZjMAM2YzAGZmMwCZZjMAzGYzAP9mMwAAmTMAM5kzAGaZMwCZmTMAzJkzAP+Z
        MwAAzDMAM8wzAGbMMwCZzDMAzMwzAP/MMwAA/zMAM/8zAGb/MwCZ/zMAzP8zAP//MwAAAGYAMwBmAGYA
        ZgCZAGYAzABmAP8AZgAAM2YAMzNmAGYzZgCZM2YAzDNmAP8zZgAAZmYAM2ZmAJlmZgDMZmYA/2ZmAACZ
        ZgAzmWYAZplmAJmZZgDMmWYA/5lmAADMZgAzzGYAZsxmAJnMZgDMzGYA/8xmAAD/ZgAz/2YAZv9mAJn/
        ZgDM/2YA//9mAAAAmQAzAJkAZgCZAJkAmQDMAJkA/wCZAAAzmQAzM5kAZjOZAJkzmQDMM5kA/zOZAABm
        mQAzZpkAZmaZAJlmmQDMZpkA/2aZAACZmQAzmZkAZpmZAMyZmQD/mZkAAcyZADPMmQBmzJkAmcyZAMzM
        mQD/zJkAAP+ZADP/mQBm/5kAmf+ZAMz/mQD//5kAAADMADMAzABmAMwAmQDMAMwAzAD/AMwAADPMADMz
        zABmM8wAmTPMAMwzzAD/M8wAAGbMADNmzABmZswAmWbMAMxmzAD/ZswAAJnMADOZzABmmcwAmZnMAMyZ
        zAD/mcwAAMzMADPMzABmzMwAmczMAP/MzAAA/8wAM//MAGb/zACZ/8wAzP/MAP//zAAAAP8AMwD/AGYA
        /wCZAP8AzAD/AP8A/wAAM/8AMzP/AGYz/wCZM/8AzDP/AP8z/wAAZv8AM2b/AGZm/wCZZv8AzGb/AP9m
        /wAAmf8AM5n/AGaZ/wCZmf8AzJn/AP+Z/wAAzP8AM8z/AGbM/wCZzP8AzMz/AP/M/wAA//8AM///AGb/
        /wCZ//8AzP//AA4ODiwsCAgICCoqKg4ODg4O+PLAyMHB6uq7u7u7+A4O97u7u8HxKdwsKCy7u7v3DvfA
        u7vxLMi7u7vxLLu79w73u7u7LMm7u7u78iq7u/cO/7u7u8ieu7u7u/H5u7v/Dv/Iu7u7u7v5+PgozLrI
        /w4O5Lu7u/LcKdwqyLq75A4ODsi7u/L5/sDIu7u7u8gODg7yu7v4+bu7u7vIyLvIDg4O8ru7+Cy7u7u7
        Kci78g4ODvi7u7v5KAgILPK7uvgODg74u7u7u+rIyMi7usj4Dg4ODsjy8vIICCoI8vLIDg4ODg4O+fLI
        u7u7u/L5Dg4ODg4ODg4ODg4ODg4ODg4ODg7gDwAAgAMAAAABAAAAAQAAAAEAAAABAAAAAQAAgAMAAIAD
        AACAAwAAgAMAAIADAACAAwAAwAcAAOAPAAD//wAAKAAAACAAAABAAAAAAQAYAAAAAAAADAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALW18ZOT7H9/525v4Ftc2UhI0Tk5yTAxwjc3vj8/vkVGvUpLvVBQ
        vFlavWprwoyM0LW23QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////////////////////4AAAP4AAAA+AAAAPgAAAD4AAAA+AA
        AAPgAAAD4AAAA+AAAAPgAAAD4AAAA+AAAAPgAAAD8AAAA/AAAAfwAAAH8AAAB/AAAAfwAAAH8AAAB/gA
        AA/4AAAP+AAAD/4AAD//AAB/////////////////
</value>
  </data>
</root>